services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./hosts/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../webapp:/var/www/html:ro
    depends_on:
      - webapp

  webapp:
    build:
      context: ../webapp
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - '80'
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - ../webapp:/var/www/html

  db:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - '3306:3306'
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ./rabbit/definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  content-indexer:
    build:
      context: ../content-indexer
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ../content-indexer/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    working_dir: /app
    command: air
    volumes:
      - ../content-indexer:/app

  # solana-validator:
  #   image: solanalabs/solana:stable
  #   restart: unless-stopped
  #   entrypoint:
  #     - solana-test-validator
  #     - --reset
  #     - --quiet
  #   ports:
  #     - '8899:8899'
  #     - '8900:8900'

  # contract-deployer:
  #   image: rust:1.86-alpine
  #   container_name: contract-deployer
  #   working_dir: /workspace
  #   volumes:
  #     - ../chain-gateway:/workspace
  #     - ./solana/key:/root/.config/solana
  #   env_file:
  #     - ../chain-gateway/.env
  #   command: anchor deploy --provider.cluster localnet
  #   depends_on:
  #     - solana-validator

  chain-gateway:
    build:
      context: ../chain-gateway
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./solana/key:/root/.config/solana
      - ./scripts:/scripts:ro
    env_file:
      - ../chain-gateway/.env
    restart: unless-stopped
    ports:
      - "50051:50051" 
    # depends_on:
      # - solana-validator

  adminer:
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: db
    ports:
      - 8080:8080

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  db_data:
  redis_data:
