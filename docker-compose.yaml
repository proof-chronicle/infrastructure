services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./hosts/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../webapp:/var/www/html:ro
    depends_on:
      - webapp

  webapp:
    build:
      context: ../webapp
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - '80'
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - ../webapp:/var/www/html

  db:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - '3306:3306'
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ./rabbit/definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  content-indexer:
    build:
      context: ../content-indexer
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ../content-indexer/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    working_dir: /app
    command: air
    volumes:
      - ../content-indexer:/app

  contract-builder:
    build:
      context: ../solana-proof-store
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ../solana-proof-store:/app
    restart: "no"

  solana-validator:
    image: solanalabs/solana:stable
    restart: unless-stopped
    volumes:
      - ./solana/key:/root/.config/solana
      - ../solana-proof-store/target/deploy:/programs:ro
    depends_on:
      contract-builder:
        condition: service_completed_successfully
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo "Starting Solana validator..."
        solana-test-validator --reset --quiet &
        VALIDATOR_PID=$$!
        
        echo "Waiting for validator to start..."
        sleep 10
        
        echo "Deploying program..."
        solana program deploy /programs/proof_store.so --url http://localhost:8899
        echo "Program deployed successfully"
        
        echo "Airdropping SOL to default account..."
        solana airdrop 10 CA9rQsM2ifdX716wfjfEjDWuq8TbheVtCFzs7L6rm7mz --url http://localhost:8899
        
        echo "Checking balance..."
        solana balance CA9rQsM2ifdX716wfjfEjDWuq8TbheVtCFzs7L6rm7mz --url http://localhost:8899
        
        echo "Solana validator ready with funded account"
        wait $$VALIDATOR_PID
    ports:
      - '8899:8899'
      - '8900:8900'

  chain-gateway:
    build:
      context: ../chain-gateway
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./solana/key:/root/.config/solana
      - ./scripts:/scripts:ro
    env_file:
      - ../chain-gateway/.env
    restart: unless-stopped
    ports:
      - "50051:50051" 
    depends_on:
      - solana-validator

  adminer:
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: db
    ports:
      - 8080:8080

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  solana-explorer:
    build:
      context: ./solana-explorer
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - solana-validator
    volumes:
      - ./solana-explorer/config:/app/config:ro
    environment:
      # Next.js environment variables (these are used by the browser)
      - NEXT_PUBLIC_CLUSTER=custom
      - NEXT_PUBLIC_CLUSTER_URL=http://localhost:8899
      - NEXT_PUBLIC_CLUSTER_NAME=Local Validator
      - NEXT_PUBLIC_EXPLORER_API_URL=http://localhost:8899
      # Legacy React environment variables (fallback)
      - REACT_APP_CLUSTER=custom
      - REACT_APP_CLUSTER_URL=http://localhost:8899
      - REACT_APP_CLUSTER_NAME=Local Validator
      # Disable mainnet connections
      - NEXT_PUBLIC_DISABLE_MAINNET=true
      - NODE_ENV=development

volumes:
  db_data:
  redis_data:
  solana_explorer_data:
  solana_explorer_cache:
